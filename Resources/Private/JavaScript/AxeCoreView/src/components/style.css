.resultSection {
    margin: var(--spacing-Half) calc(var(--spacing-Full) * -1) 0;
}

.propertyGroupLabel {
    width: 100%;
    overflow-x: hidden;
    text-overflow: ellipsis;
    padding: 0 var(--spacing-GoldenUnit) 0 var(--spacing-Full);
}

.spacer {
    margin-top: var(--spacing-Half);
}

.iconWrapper {
    width: 2em;
    display: inline-block;
    text-align: center;
    margin-left: -5px;
}

.resultStatus {
    margin-right: var(--spacing-Quarter);
    &--minor {
        color: var(--colors-WarnHover);
    }
    &--moderate {
        color: var(--colors-Warn);
    }
    &--serious {
        color: var(--colors-Error);
    }
    &--critical {
        color: #b30b0b;
    }
}

.resultItem {
    margin-top: var(--spacing-Half);
    & + & {
        margin-top: var(--spacing-Full);
    }
}
.resultTitle {
}
.resultDescription {
    font-weight: var(--fontsCopy-CssWeight);
    color: var(--colors-ContrastBrighter);
    margin-top: var(--spacing-Half);
}
.resultLink {
    color: var(--colors-PrimaryBlue);
    text-decoration: underline;
    &:hover,
    &:focus {
        color: var(--colors-PrimaryBlueHover);
    }
    svg {
        color: inherit;
        margin-left: 4px;
    }
}

.occurrenceItem {
    margin-top: var(--spacing-Half);
}
ul.occurrenceErrorList {
    padding-left: var(--spacing-Full);
    list-style-type: disc;
}
li.occurrenceErrorItem {
    display: list-item;
}

.popout {
    background: var(--colors-ContrastDarker);
    height: 100%;
    padding: var(--spacing-Full);
    overflow: auto;
}

.occurrencePagination {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 4px;
}
.occurrencePaginationButton {
    background-color: var(--colors-ContrastNeutral);
    color: var(--colors-ContrastBrightest);
    padding: 4px;
    border: 0;
    cursor: pointer;

    &:focus {
         outline: 1px solid var(--colors-PrimaryBlue);
    }

    &:enabled:hover {
        background-color: var(--colors-ContrastDarker);
    }

    &[disabled] {
        opacity: .5;
        cursor: not-allowed;

        &:hover,
        &.btn--isPressed,
        &:hover i,
        & i {
            color: var(--colors-ContrastBrightest);
        }
    }
}

:global {
    .style__icon--color-success {
        color: var(--colors-Success);
    }
}
